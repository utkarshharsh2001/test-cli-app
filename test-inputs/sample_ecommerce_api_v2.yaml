openapi: 3.0.1
info:
  title: Sample E-commerce API
  version: 2.0.0
  description: Updated e-commerce API with new user management endpoints
servers:
  - url: https://api.example.com/v2
    description: Production server v2
paths:
  /products:
    get:
      summary: Get all products
      tags: [Products]
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          schema:
            type: string
            enum: [name, price, created_date]
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create a new product
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Product created
  /products/{id}:
    get:
      summary: Get product by ID
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
        '404':
          description: Product not found
  /users:
    get:
      summary: Get all users
      tags: [Users]
      responses:
        '200':
          description: List of users
    post:
      summary: Create a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created
  /users/{id}:
    get:
      summary: Get user by ID
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
        '404':
          description: User not found
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
        category:
          type: string
        inStock:
          type: boolean
      required: [id, name, price]
    ProductCreate:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
          format: float
        category:
          type: string
      required: [name, price]
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required: [id, username, email]
    UserCreate:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required: [username, email]

